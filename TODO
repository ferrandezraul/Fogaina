///////////////////////////////////////////////////////////////////////////////
/////////// TODO  /////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

Carousel foundation broken
Modify home layout to have two columns (in one column place the moneda social and twitter and in another the text you want )
Therefore create new page part!

Extend show layout (see app/views/refinery/pages/show.html.erb )

Give some style to foundation nav by editing foundation_and_overwrites.scss

http://www.refinerycms.com/guides/menu-presenter

Review how changeg Refinery::Pages::MenuPresenter
https://gist.github.com/jess/9270729

1. Create an extension for events, courses and anything else?
   http://www.refinerycms.com/guides/generate-an-extension-to-use-your-mvcs

///////////////////////////////////////////////////////////////////////////////
/////////// BEST PRACTISES  ///////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

1. 	In the case of a controller method, you can get easy access to the code with the refinery:uncrudify rake task:

	$ bin/rake refinery:uncrudify controller=refinery/admin/pages action=create

	Running the rake refinery:uncrudify task outputs to stdout, and will not modify any files, so you can do so without fear of overwriting your existing controller modifications.

2. 	By default, Refinery provides you with Body and Side Body page parts since most pages have a two column-style layout. If your layout has three content areas or one, you’re going to 	 want to update this setting to reflect that.

	Within config/initializers/refinery/pages.rb you will see various default settings are commented out, including the following:

	# Configure global page default parts
  	# config.default_parts = ["Body", "Side Body"]

	Edit this code to have the names of the default page parts you want, click Save and you’re done. You’ll need to add a new page to see the page part. Existing pages have the default_parts they were created with.

	Here’s a sample of a site that would have three content areas on most of its pages.

	# Configure global page default parts
  	config.default_parts = ["Left Body", "Middle Body", "Right Body"]

	Changing Page Parts for a single page
	Often we find our home pages have three or more page parts but the rest of the site only needs two. In this situation you just want to have the default page parts set to Body and Side Body and your home page setup to have an extra one.

	Refinery supports the ability for the user to add new Page Parts on the fly when editing a page.

	To add a new Page Part just to the home page, refer back to config/initializers/refinery/pages.rb. Inside, you should see the following:

	# config.new_page_parts = false

	Uncomment this and change the value to true, save, and restart your server.

	Now go to your “Pages” tab in Refinery and edit your home page. You’ll notice a plus and minus button at the top right of the visual editor. Click on the plus icon and add a new page part titled “Middle Body” and click save. A new visual editor will appear in a tab called “Middle Body” ready to use just for this page. Inserting content there will show up on any page that uses the content_page partial (by default, all of them).

	If you’ve modified your app/views/refinery/pages/home.html.erb file,

	you will not see your new page part until you set that page part to display in the view.

	If you have modified your home.html.erb file, you can use the following snippet to output the new part’s content in your page:

	<%= raw @page.content_for(:middle_body) %>

	If you don’t have a app/views/refinery/pages/home.html.erb view already,

	run rake refinery:override view=pages/home to copy it into your app.

	ANOTHER DOC I FOUND (probably outdated):	
	How do I add a new page part to all existing pages?

	There is no facility for this. In your console, you will have to run:

	Refinery::Page.all.map do { |p| p.parts.create(:title => "My Page Part", :position => 3) }

	If you wish to make this a default for all new pages, be sure to add it to your default parts (in 1.0.x, this is in your Settings tab; in 2.0.x, it is in the config/initializers/refinery/pages.rb file).

///////////////////////////////////////////////////////////////////////////////
/////////// LEARNING RESOURCES ////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

Rubygems
	http://guides.rubygems.org/command-reference/

Some places where to learn ruby and rails
	http://iwanttolearnruby.com/
